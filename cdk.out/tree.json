{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "@aws-cdk/core.Construct",
          "version": "1.181.0"
        }
      },
      "pipeline-to-ecr": {
        "id": "pipeline-to-ecr",
        "path": "pipeline-to-ecr",
        "children": {
          "fargate-dev-workshop-apprepo": {
            "id": "fargate-dev-workshop-apprepo",
            "path": "pipeline-to-ecr/fargate-dev-workshop-apprepo",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "pipeline-to-ecr/fargate-dev-workshop-apprepo/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeCommit::Repository",
                  "aws:cdk:cloudformation:props": {
                    "repositoryName": "fargate-dev-workshop-app-repo"
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-codecommit.CfnRepository",
                  "version": "1.181.0"
                }
              },
              "pipelinetoecrMyPipeline18360B7AEventRule": {
                "id": "pipelinetoecrMyPipeline18360B7AEventRule",
                "path": "pipeline-to-ecr/fargate-dev-workshop-apprepo/pipelinetoecrMyPipeline18360B7AEventRule",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline-to-ecr/fargate-dev-workshop-apprepo/pipelinetoecrMyPipeline18360B7AEventRule/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                      "aws:cdk:cloudformation:props": {
                        "eventPattern": {
                          "source": [
                            "aws.codecommit"
                          ],
                          "resources": [
                            {
                              "Fn::GetAtt": [
                                "fargatedevworkshopapprepo09C62F80",
                                "Arn"
                              ]
                            }
                          ],
                          "detail-type": [
                            "CodeCommit Repository State Change"
                          ],
                          "detail": {
                            "event": [
                              "referenceCreated",
                              "referenceUpdated"
                            ],
                            "referenceName": [
                              "master"
                            ]
                          }
                        },
                        "state": "ENABLED",
                        "targets": [
                          {
                            "id": "Target0",
                            "arn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":codepipeline:us-east-1:241756044655:",
                                  {
                                    "Ref": "MyPipelineAED38ECF"
                                  }
                                ]
                              ]
                            },
                            "roleArn": {
                              "Fn::GetAtt": [
                                "MyPipelineEventsRoleFAB99F32",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-events.CfnRule",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-events.Rule",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-codecommit.Repository",
              "version": "1.181.0"
            }
          },
          "fargate-dev-workshop": {
            "id": "fargate-dev-workshop",
            "path": "pipeline-to-ecr/fargate-dev-workshop",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "pipeline-to-ecr/fargate-dev-workshop/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECR::Repository",
                  "aws:cdk:cloudformation:props": {
                    "repositoryName": "fargate-dev-workshop"
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ecr.CfnRepository",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-ecr.Repository",
              "version": "1.181.0"
            }
          },
          "MyPipeline": {
            "id": "MyPipeline",
            "path": "pipeline-to-ecr/MyPipeline",
            "children": {
              "ArtifactsBucketEncryptionKey": {
                "id": "ArtifactsBucketEncryptionKey",
                "path": "pipeline-to-ecr/MyPipeline/ArtifactsBucketEncryptionKey",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline-to-ecr/MyPipeline/ArtifactsBucketEncryptionKey/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Key",
                      "aws:cdk:cloudformation:props": {
                        "keyPolicy": {
                          "Statement": [
                            {
                              "Action": [
                                "kms:Create*",
                                "kms:Describe*",
                                "kms:Enable*",
                                "kms:List*",
                                "kms:Put*",
                                "kms:Update*",
                                "kms:Revoke*",
                                "kms:Disable*",
                                "kms:Get*",
                                "kms:Delete*",
                                "kms:ScheduleKeyDeletion",
                                "kms:CancelKeyDeletion",
                                "kms:GenerateDataKey",
                                "kms:TagResource",
                                "kms:UntagResource"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::241756044655:root"
                                    ]
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "MyPipelineRoleC0D47CA4",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "MyPipelineSourceCodeCommitCodePipelineActionRole3B3AD87E",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "DockerLintRoleBA4A0360",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "DockerLintRoleBA4A0360",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "DockerSecretScanRole4D0115A2",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "DockerSecretScanRole4D0115A2",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "DockerBuildRole2BAC6ED2",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "DockerBuildRole2BAC6ED2",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-kms.CfnKey",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-kms.Key",
                  "version": "1.181.0"
                }
              },
              "ArtifactsBucketEncryptionKeyAlias": {
                "id": "ArtifactsBucketEncryptionKeyAlias",
                "path": "pipeline-to-ecr/MyPipeline/ArtifactsBucketEncryptionKeyAlias",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline-to-ecr/MyPipeline/ArtifactsBucketEncryptionKeyAlias/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Alias",
                      "aws:cdk:cloudformation:props": {
                        "aliasName": "alias/codepipeline-pipelinetoecrmypipeline18360b7a",
                        "targetKeyId": {
                          "Fn::GetAtt": [
                            "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                            "Arn"
                          ]
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-kms.CfnAlias",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-kms.Alias",
                  "version": "1.181.0"
                }
              },
              "ArtifactsBucket": {
                "id": "ArtifactsBucket",
                "path": "pipeline-to-ecr/MyPipeline/ArtifactsBucket",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline-to-ecr/MyPipeline/ArtifactsBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "aws:kms",
                                "kmsMasterKeyId": {
                                  "Fn::GetAtt": [
                                    "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                                    "Arn"
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.CfnBucket",
                      "version": "1.181.0"
                    }
                  },
                  "Policy": {
                    "id": "Policy",
                    "path": "pipeline-to-ecr/MyPipeline/ArtifactsBucket/Policy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "pipeline-to-ecr/MyPipeline/ArtifactsBucket/Policy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                          "aws:cdk:cloudformation:props": {
                            "bucket": {
                              "Ref": "MyPipelineArtifactsBucket727923DD"
                            },
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:*",
                                  "Condition": {
                                    "Bool": {
                                      "aws:SecureTransport": "false"
                                    }
                                  },
                                  "Effect": "Deny",
                                  "Principal": {
                                    "AWS": "*"
                                  },
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "MyPipelineArtifactsBucket727923DD",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "MyPipelineArtifactsBucket727923DD",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-s3.CfnBucketPolicy",
                          "version": "1.181.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-s3.BucketPolicy",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-s3.Bucket",
                  "version": "1.181.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "pipeline-to-ecr/MyPipeline/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline-to-ecr/MyPipeline/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "codepipeline.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.181.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "pipeline-to-ecr/MyPipeline/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "pipeline-to-ecr/MyPipeline/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "MyPipelineArtifactsBucket727923DD",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "MyPipelineArtifactsBucket727923DD",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "MyPipelineSourceCodeCommitCodePipelineActionRole3B3AD87E",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "MyPipelineLintDockerLintImagesCodePipelineActionRole859AFE61",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "MyPipelineSecretScanDockerSecretScanImagesCodePipelineActionRoleA1BC6871",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "MyPipelineBuildDockerBuildImagesCodePipelineActionRoleE3845FE2",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "MyPipelineRoleDefaultPolicy34F09EFA",
                            "roles": [
                              {
                                "Ref": "MyPipelineRoleC0D47CA4"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                          "version": "1.181.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Policy",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.181.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "pipeline-to-ecr/MyPipeline/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                  "aws:cdk:cloudformation:props": {
                    "roleArn": {
                      "Fn::GetAtt": [
                        "MyPipelineRoleC0D47CA4",
                        "Arn"
                      ]
                    },
                    "stages": [
                      {
                        "name": "Source",
                        "actions": [
                          {
                            "name": "CodeCommit",
                            "outputArtifacts": [
                              {
                                "name": "Artifact_Source_CodeCommit"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Source",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeCommit"
                            },
                            "configuration": {
                              "RepositoryName": {
                                "Fn::GetAtt": [
                                  "fargatedevworkshopapprepo09C62F80",
                                  "Name"
                                ]
                              },
                              "BranchName": "master",
                              "PollForSourceChanges": false
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "MyPipelineSourceCodeCommitCodePipelineActionRole3B3AD87E",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "name": "Lint",
                        "actions": [
                          {
                            "name": "DockerLintImages",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Source_CodeCommit"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Build",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeBuild"
                            },
                            "configuration": {
                              "ProjectName": {
                                "Ref": "DockerLintAE1899AD"
                              }
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "MyPipelineLintDockerLintImagesCodePipelineActionRole859AFE61",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "name": "SecretScan",
                        "actions": [
                          {
                            "name": "DockerSecretScanImages",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Source_CodeCommit"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Build",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeBuild"
                            },
                            "configuration": {
                              "ProjectName": {
                                "Ref": "DockerSecretScan0936513F"
                              }
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "MyPipelineSecretScanDockerSecretScanImagesCodePipelineActionRoleA1BC6871",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "name": "Build",
                        "actions": [
                          {
                            "name": "DockerBuildImages",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Source_CodeCommit"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Build",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeBuild"
                            },
                            "configuration": {
                              "ProjectName": {
                                "Ref": "DockerBuildCFACF599"
                              }
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "MyPipelineBuildDockerBuildImagesCodePipelineActionRoleE3845FE2",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "artifactStore": {
                      "type": "S3",
                      "location": {
                        "Ref": "MyPipelineArtifactsBucket727923DD"
                      },
                      "encryptionKey": {
                        "type": "KMS",
                        "id": {
                          "Fn::GetAtt": [
                            "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                            "Arn"
                          ]
                        }
                      }
                    },
                    "name": "fargate-dev-workshop-commit-to-ecr"
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-codepipeline.CfnPipeline",
                  "version": "1.181.0"
                }
              },
              "Source": {
                "id": "Source",
                "path": "pipeline-to-ecr/MyPipeline/Source",
                "children": {
                  "CodeCommit": {
                    "id": "CodeCommit",
                    "path": "pipeline-to-ecr/MyPipeline/Source/CodeCommit",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "pipeline-to-ecr/MyPipeline/Source/CodeCommit/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "pipeline-to-ecr/MyPipeline/Source/CodeCommit/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::241756044655:root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.CfnRole",
                              "version": "1.181.0"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "pipeline-to-ecr/MyPipeline/Source/CodeCommit/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "pipeline-to-ecr/MyPipeline/Source/CodeCommit/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*",
                                            "s3:DeleteObject*",
                                            "s3:PutObject*",
                                            "s3:Abort*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "MyPipelineArtifactsBucket727923DD",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "MyPipelineArtifactsBucket727923DD",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey",
                                            "kms:Encrypt",
                                            "kms:ReEncrypt*",
                                            "kms:GenerateDataKey*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": [
                                            "codecommit:GetBranch",
                                            "codecommit:GetCommit",
                                            "codecommit:UploadArchive",
                                            "codecommit:GetUploadArchiveStatus",
                                            "codecommit:CancelUploadArchive"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "fargatedevworkshopapprepo09C62F80",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "MyPipelineSourceCodeCommitCodePipelineActionRoleDefaultPolicyEC1DD3CC",
                                    "roles": [
                                      {
                                        "Ref": "MyPipelineSourceCodeCommitCodePipelineActionRole3B3AD87E"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                                  "version": "1.181.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.Policy",
                              "version": "1.181.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.Role",
                          "version": "1.181.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.181.0"
                }
              },
              "EventsRole": {
                "id": "EventsRole",
                "path": "pipeline-to-ecr/MyPipeline/EventsRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline-to-ecr/MyPipeline/EventsRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "events.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.181.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "pipeline-to-ecr/MyPipeline/EventsRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "pipeline-to-ecr/MyPipeline/EventsRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "codepipeline:StartPipelineExecution",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":codepipeline:us-east-1:241756044655:",
                                        {
                                          "Ref": "MyPipelineAED38ECF"
                                        }
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "MyPipelineEventsRoleDefaultPolicyF045F033",
                            "roles": [
                              {
                                "Ref": "MyPipelineEventsRoleFAB99F32"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                          "version": "1.181.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Policy",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.181.0"
                }
              },
              "Lint": {
                "id": "Lint",
                "path": "pipeline-to-ecr/MyPipeline/Lint",
                "children": {
                  "DockerLintImages": {
                    "id": "DockerLintImages",
                    "path": "pipeline-to-ecr/MyPipeline/Lint/DockerLintImages",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "pipeline-to-ecr/MyPipeline/Lint/DockerLintImages/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "pipeline-to-ecr/MyPipeline/Lint/DockerLintImages/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::241756044655:root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.CfnRole",
                              "version": "1.181.0"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "pipeline-to-ecr/MyPipeline/Lint/DockerLintImages/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "pipeline-to-ecr/MyPipeline/Lint/DockerLintImages/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "codebuild:BatchGetBuilds",
                                            "codebuild:StartBuild",
                                            "codebuild:StopBuild"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "DockerLintAE1899AD",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "MyPipelineLintDockerLintImagesCodePipelineActionRoleDefaultPolicyAE695748",
                                    "roles": [
                                      {
                                        "Ref": "MyPipelineLintDockerLintImagesCodePipelineActionRole859AFE61"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                                  "version": "1.181.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.Policy",
                              "version": "1.181.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.Role",
                          "version": "1.181.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.181.0"
                }
              },
              "SecretScan": {
                "id": "SecretScan",
                "path": "pipeline-to-ecr/MyPipeline/SecretScan",
                "children": {
                  "DockerSecretScanImages": {
                    "id": "DockerSecretScanImages",
                    "path": "pipeline-to-ecr/MyPipeline/SecretScan/DockerSecretScanImages",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "pipeline-to-ecr/MyPipeline/SecretScan/DockerSecretScanImages/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "pipeline-to-ecr/MyPipeline/SecretScan/DockerSecretScanImages/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::241756044655:root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.CfnRole",
                              "version": "1.181.0"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "pipeline-to-ecr/MyPipeline/SecretScan/DockerSecretScanImages/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "pipeline-to-ecr/MyPipeline/SecretScan/DockerSecretScanImages/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "codebuild:BatchGetBuilds",
                                            "codebuild:StartBuild",
                                            "codebuild:StopBuild"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "DockerSecretScan0936513F",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "MyPipelineSecretScanDockerSecretScanImagesCodePipelineActionRoleDefaultPolicyB4727F6E",
                                    "roles": [
                                      {
                                        "Ref": "MyPipelineSecretScanDockerSecretScanImagesCodePipelineActionRoleA1BC6871"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                                  "version": "1.181.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.Policy",
                              "version": "1.181.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.Role",
                          "version": "1.181.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.181.0"
                }
              },
              "Build": {
                "id": "Build",
                "path": "pipeline-to-ecr/MyPipeline/Build",
                "children": {
                  "DockerBuildImages": {
                    "id": "DockerBuildImages",
                    "path": "pipeline-to-ecr/MyPipeline/Build/DockerBuildImages",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "pipeline-to-ecr/MyPipeline/Build/DockerBuildImages/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "pipeline-to-ecr/MyPipeline/Build/DockerBuildImages/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::241756044655:root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.CfnRole",
                              "version": "1.181.0"
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "pipeline-to-ecr/MyPipeline/Build/DockerBuildImages/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "pipeline-to-ecr/MyPipeline/Build/DockerBuildImages/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "codebuild:BatchGetBuilds",
                                            "codebuild:StartBuild",
                                            "codebuild:StopBuild"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "DockerBuildCFACF599",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "MyPipelineBuildDockerBuildImagesCodePipelineActionRoleDefaultPolicy04226057",
                                    "roles": [
                                      {
                                        "Ref": "MyPipelineBuildDockerBuildImagesCodePipelineActionRoleE3845FE2"
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                                  "version": "1.181.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "@aws-cdk/aws-iam.Policy",
                              "version": "1.181.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.Role",
                          "version": "1.181.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Construct",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/core.Construct",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-codepipeline.Pipeline",
              "version": "1.181.0"
            }
          },
          "DockerLint": {
            "id": "DockerLint",
            "path": "pipeline-to-ecr/DockerLint",
            "children": {
              "Role": {
                "id": "Role",
                "path": "pipeline-to-ecr/DockerLint/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline-to-ecr/DockerLint/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "codebuild.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.181.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "pipeline-to-ecr/DockerLint/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "pipeline-to-ecr/DockerLint/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:us-east-1:241756044655:log-group:/aws/codebuild/",
                                          {
                                            "Ref": "DockerLintAE1899AD"
                                          }
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:us-east-1:241756044655:log-group:/aws/codebuild/",
                                          {
                                            "Ref": "DockerLintAE1899AD"
                                          },
                                          ":*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "codebuild:CreateReportGroup",
                                    "codebuild:CreateReport",
                                    "codebuild:UpdateReport",
                                    "codebuild:BatchPutTestCases",
                                    "codebuild:BatchPutCodeCoverages"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":codebuild:us-east-1:241756044655:report-group/",
                                        {
                                          "Ref": "DockerLintAE1899AD"
                                        },
                                        "-*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "MyPipelineArtifactsBucket727923DD",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "MyPipelineArtifactsBucket727923DD",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DockerLintRoleDefaultPolicyBEB3C41D",
                            "roles": [
                              {
                                "Ref": "DockerLintRoleBA4A0360"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                          "version": "1.181.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Policy",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.181.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "pipeline-to-ecr/DockerLint/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                  "aws:cdk:cloudformation:props": {
                    "artifacts": {
                      "type": "CODEPIPELINE"
                    },
                    "environment": {
                      "type": "LINUX_CONTAINER",
                      "image": "aws/codebuild/nodejs:10.1.0",
                      "imagePullCredentialsType": "CODEBUILD",
                      "privilegedMode": true,
                      "computeType": "BUILD_GENERAL1_SMALL",
                      "environmentVariables": [
                        {
                          "name": "ecr",
                          "type": "PLAINTEXT",
                          "value": {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::Select": [
                                    4,
                                    {
                                      "Fn::Split": [
                                        ":",
                                        {
                                          "Fn::GetAtt": [
                                            "fargatedevworkshopDC8556A7",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                ".dkr.ecr.",
                                {
                                  "Fn::Select": [
                                    3,
                                    {
                                      "Fn::Split": [
                                        ":",
                                        {
                                          "Fn::GetAtt": [
                                            "fargatedevworkshopDC8556A7",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                ".",
                                {
                                  "Ref": "AWS::URLSuffix"
                                },
                                "/",
                                {
                                  "Ref": "fargatedevworkshopDC8556A7"
                                }
                              ]
                            ]
                          }
                        },
                        {
                          "name": "project_name",
                          "type": "PLAINTEXT",
                          "value": "fargate-dev-workshop"
                        }
                      ]
                    },
                    "serviceRole": {
                      "Fn::GetAtt": [
                        "DockerLintRoleBA4A0360",
                        "Arn"
                      ]
                    },
                    "source": {
                      "type": "CODEPIPELINE",
                      "buildSpec": "configs/buildspec_lint.yml"
                    },
                    "cache": {
                      "type": "NO_CACHE"
                    },
                    "description": "linting the container dockerfile for best practices",
                    "encryptionKey": {
                      "Fn::GetAtt": [
                        "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                        "Arn"
                      ]
                    },
                    "name": "fargate-dev-workshop-docker-lint",
                    "timeoutInMinutes": 60
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-codebuild.PipelineProject",
              "version": "1.181.0"
            }
          },
          "DockerSecretScan": {
            "id": "DockerSecretScan",
            "path": "pipeline-to-ecr/DockerSecretScan",
            "children": {
              "Role": {
                "id": "Role",
                "path": "pipeline-to-ecr/DockerSecretScan/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline-to-ecr/DockerSecretScan/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "codebuild.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.181.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "pipeline-to-ecr/DockerSecretScan/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "pipeline-to-ecr/DockerSecretScan/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:us-east-1:241756044655:log-group:/aws/codebuild/",
                                          {
                                            "Ref": "DockerSecretScan0936513F"
                                          }
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:us-east-1:241756044655:log-group:/aws/codebuild/",
                                          {
                                            "Ref": "DockerSecretScan0936513F"
                                          },
                                          ":*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "codebuild:CreateReportGroup",
                                    "codebuild:CreateReport",
                                    "codebuild:UpdateReport",
                                    "codebuild:BatchPutTestCases",
                                    "codebuild:BatchPutCodeCoverages"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":codebuild:us-east-1:241756044655:report-group/",
                                        {
                                          "Ref": "DockerSecretScan0936513F"
                                        },
                                        "-*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": "codecommit:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "MyPipelineArtifactsBucket727923DD",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "MyPipelineArtifactsBucket727923DD",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DockerSecretScanRoleDefaultPolicy2212C561",
                            "roles": [
                              {
                                "Ref": "DockerSecretScanRole4D0115A2"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                          "version": "1.181.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Policy",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.181.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "pipeline-to-ecr/DockerSecretScan/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                  "aws:cdk:cloudformation:props": {
                    "artifacts": {
                      "type": "CODEPIPELINE"
                    },
                    "environment": {
                      "type": "LINUX_CONTAINER",
                      "image": "aws/codebuild/standard:1.0",
                      "imagePullCredentialsType": "CODEBUILD",
                      "privilegedMode": true,
                      "computeType": "BUILD_GENERAL1_SMALL",
                      "environmentVariables": [
                        {
                          "name": "commituri",
                          "type": "PLAINTEXT",
                          "value": {
                            "Fn::GetAtt": [
                              "fargatedevworkshopapprepo09C62F80",
                              "CloneUrlHttp"
                            ]
                          }
                        },
                        {
                          "name": "ecr",
                          "type": "PLAINTEXT",
                          "value": {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::Select": [
                                    4,
                                    {
                                      "Fn::Split": [
                                        ":",
                                        {
                                          "Fn::GetAtt": [
                                            "fargatedevworkshopDC8556A7",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                ".dkr.ecr.",
                                {
                                  "Fn::Select": [
                                    3,
                                    {
                                      "Fn::Split": [
                                        ":",
                                        {
                                          "Fn::GetAtt": [
                                            "fargatedevworkshopDC8556A7",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                ".",
                                {
                                  "Ref": "AWS::URLSuffix"
                                },
                                "/",
                                {
                                  "Ref": "fargatedevworkshopDC8556A7"
                                }
                              ]
                            ]
                          }
                        },
                        {
                          "name": "project_name",
                          "type": "PLAINTEXT",
                          "value": "fargate-dev-workshop"
                        }
                      ]
                    },
                    "serviceRole": {
                      "Fn::GetAtt": [
                        "DockerSecretScanRole4D0115A2",
                        "Arn"
                      ]
                    },
                    "source": {
                      "type": "CODEPIPELINE",
                      "buildSpec": "configs/buildspec_secrets.yml"
                    },
                    "cache": {
                      "type": "NO_CACHE"
                    },
                    "description": "Scanning container for secrets",
                    "encryptionKey": {
                      "Fn::GetAtt": [
                        "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                        "Arn"
                      ]
                    },
                    "name": "fargate-dev-workshop-docker-secretscan",
                    "timeoutInMinutes": 60
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-codebuild.PipelineProject",
              "version": "1.181.0"
            }
          },
          "DockerBuild": {
            "id": "DockerBuild",
            "path": "pipeline-to-ecr/DockerBuild",
            "children": {
              "Role": {
                "id": "Role",
                "path": "pipeline-to-ecr/DockerBuild/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "pipeline-to-ecr/DockerBuild/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "codebuild.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnRole",
                      "version": "1.181.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "pipeline-to-ecr/DockerBuild/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "pipeline-to-ecr/DockerBuild/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:us-east-1:241756044655:log-group:/aws/codebuild/",
                                          {
                                            "Ref": "DockerBuildCFACF599"
                                          }
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:us-east-1:241756044655:log-group:/aws/codebuild/",
                                          {
                                            "Ref": "DockerBuildCFACF599"
                                          },
                                          ":*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "codebuild:CreateReportGroup",
                                    "codebuild:CreateReport",
                                    "codebuild:UpdateReport",
                                    "codebuild:BatchPutTestCases",
                                    "codebuild:BatchPutCodeCoverages"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":codebuild:us-east-1:241756044655:report-group/",
                                        {
                                          "Ref": "DockerBuildCFACF599"
                                        },
                                        "-*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "MyPipelineArtifactsBucket727923DD",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "MyPipelineArtifactsBucket727923DD",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "ecr:BatchCheckLayerAvailability",
                                    "ecr:GetDownloadUrlForLayer",
                                    "ecr:BatchGetImage"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "fargatedevworkshopDC8556A7",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "ecr:GetAuthorizationToken",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "ecr:PutImage",
                                    "ecr:InitiateLayerUpload",
                                    "ecr:UploadLayerPart",
                                    "ecr:CompleteLayerUpload"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "fargatedevworkshopDC8556A7",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DockerBuildRoleDefaultPolicy0D649F98",
                            "roles": [
                              {
                                "Ref": "DockerBuildRole2BAC6ED2"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                          "version": "1.181.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.Policy",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Role",
                  "version": "1.181.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "pipeline-to-ecr/DockerBuild/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                  "aws:cdk:cloudformation:props": {
                    "artifacts": {
                      "type": "CODEPIPELINE"
                    },
                    "environment": {
                      "type": "LINUX_CONTAINER",
                      "image": "aws/codebuild/standard:1.0",
                      "imagePullCredentialsType": "CODEBUILD",
                      "privilegedMode": true,
                      "computeType": "BUILD_GENERAL1_SMALL",
                      "environmentVariables": [
                        {
                          "name": "ecr",
                          "type": "PLAINTEXT",
                          "value": {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::Select": [
                                    4,
                                    {
                                      "Fn::Split": [
                                        ":",
                                        {
                                          "Fn::GetAtt": [
                                            "fargatedevworkshopDC8556A7",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                ".dkr.ecr.",
                                {
                                  "Fn::Select": [
                                    3,
                                    {
                                      "Fn::Split": [
                                        ":",
                                        {
                                          "Fn::GetAtt": [
                                            "fargatedevworkshopDC8556A7",
                                            "Arn"
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                ".",
                                {
                                  "Ref": "AWS::URLSuffix"
                                },
                                "/",
                                {
                                  "Ref": "fargatedevworkshopDC8556A7"
                                }
                              ]
                            ]
                          }
                        },
                        {
                          "name": "tag",
                          "type": "PLAINTEXT",
                          "value": "release"
                        },
                        {
                          "name": "project_name",
                          "type": "PLAINTEXT",
                          "value": "fargate-dev-workshop"
                        }
                      ]
                    },
                    "serviceRole": {
                      "Fn::GetAtt": [
                        "DockerBuildRole2BAC6ED2",
                        "Arn"
                      ]
                    },
                    "source": {
                      "type": "CODEPIPELINE",
                      "buildSpec": "configs/docker_build_base.yml"
                    },
                    "cache": {
                      "type": "NO_CACHE"
                    },
                    "description": "Deploy to ECR",
                    "encryptionKey": {
                      "Fn::GetAtt": [
                        "MyPipelineArtifactsBucketEncryptionKey8BF0A7F3",
                        "Arn"
                      ]
                    },
                    "name": "fargate-dev-workshop-docker-build",
                    "timeoutInMinutes": 60
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-codebuild.CfnProject",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-codebuild.PipelineProject",
              "version": "1.181.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "pipeline-to-ecr/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "pipeline-to-ecr/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnResource",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.181.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "@aws-cdk/core.Stack",
          "version": "1.181.0"
        }
      },
      "ecs-inf-test": {
        "id": "ecs-inf-test",
        "path": "ecs-inf-test",
        "children": {
          "TheVPC": {
            "id": "TheVPC",
            "path": "ecs-inf-test/TheVPC",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-inf-test/TheVPC/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "ecs-inf-test/TheVPC"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.CfnVPC",
                  "version": "1.181.0"
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "ecs-inf-test/TheVPC/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "TheVPC92636AB0"
                        },
                        "availabilityZone": "us-east-1a",
                        "cidrBlock": "10.0.0.0/19",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PublicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnet",
                      "version": "1.181.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.181.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "TheVPC92636AB0"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PublicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRouteTable",
                      "version": "1.181.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "TheVPCPublicSubnet1RouteTable17DA183D"
                        },
                        "subnetId": {
                          "Ref": "TheVPCPublicSubnet1Subnet770D4FF2"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation",
                      "version": "1.181.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "TheVPCPublicSubnet1RouteTable17DA183D"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "TheVPCIGWFA25CC08"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRoute",
                      "version": "1.181.0"
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PublicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnEIP",
                      "version": "1.181.0"
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "subnetId": {
                          "Ref": "TheVPCPublicSubnet1Subnet770D4FF2"
                        },
                        "allocationId": {
                          "Fn::GetAtt": [
                            "TheVPCPublicSubnet1EIP4412F690",
                            "AllocationId"
                          ]
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PublicSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnNatGateway",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.PublicSubnet",
                  "version": "1.181.0"
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "ecs-inf-test/TheVPC/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "TheVPC92636AB0"
                        },
                        "availabilityZone": "us-east-1b",
                        "cidrBlock": "10.0.32.0/19",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PublicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnet",
                      "version": "1.181.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.181.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "TheVPC92636AB0"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PublicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRouteTable",
                      "version": "1.181.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "TheVPCPublicSubnet2RouteTable3609F42C"
                        },
                        "subnetId": {
                          "Ref": "TheVPCPublicSubnet2Subnet73F96DA9"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation",
                      "version": "1.181.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "TheVPCPublicSubnet2RouteTable3609F42C"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "TheVPCIGWFA25CC08"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRoute",
                      "version": "1.181.0"
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PublicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnEIP",
                      "version": "1.181.0"
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "subnetId": {
                          "Ref": "TheVPCPublicSubnet2Subnet73F96DA9"
                        },
                        "allocationId": {
                          "Fn::GetAtt": [
                            "TheVPCPublicSubnet2EIP5AAFF9FA",
                            "AllocationId"
                          ]
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PublicSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnNatGateway",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.PublicSubnet",
                  "version": "1.181.0"
                }
              },
              "PublicSubnet3": {
                "id": "PublicSubnet3",
                "path": "ecs-inf-test/TheVPC/PublicSubnet3",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet3/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "TheVPC92636AB0"
                        },
                        "availabilityZone": "us-east-1c",
                        "cidrBlock": "10.0.64.0/19",
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PublicSubnet3"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnet",
                      "version": "1.181.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet3/Acl",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.181.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet3/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "TheVPC92636AB0"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PublicSubnet3"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRouteTable",
                      "version": "1.181.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet3/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "TheVPCPublicSubnet3RouteTable679ADB47"
                        },
                        "subnetId": {
                          "Ref": "TheVPCPublicSubnet3Subnet7C1E748F"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation",
                      "version": "1.181.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet3/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "TheVPCPublicSubnet3RouteTable679ADB47"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "TheVPCIGWFA25CC08"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRoute",
                      "version": "1.181.0"
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet3/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PublicSubnet3"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnEIP",
                      "version": "1.181.0"
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "ecs-inf-test/TheVPC/PublicSubnet3/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "subnetId": {
                          "Ref": "TheVPCPublicSubnet3Subnet7C1E748F"
                        },
                        "allocationId": {
                          "Fn::GetAtt": [
                            "TheVPCPublicSubnet3EIPE3930834",
                            "AllocationId"
                          ]
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PublicSubnet3"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnNatGateway",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.PublicSubnet",
                  "version": "1.181.0"
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "ecs-inf-test/TheVPC/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "TheVPC92636AB0"
                        },
                        "availabilityZone": "us-east-1a",
                        "cidrBlock": "10.0.96.0/19",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PrivateSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnet",
                      "version": "1.181.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet1/Acl",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.181.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "TheVPC92636AB0"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PrivateSubnet1"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRouteTable",
                      "version": "1.181.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "TheVPCPrivateSubnet1RouteTableF6513BC2"
                        },
                        "subnetId": {
                          "Ref": "TheVPCPrivateSubnet1Subnet571D3690"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation",
                      "version": "1.181.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "TheVPCPrivateSubnet1RouteTableF6513BC2"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "TheVPCPublicSubnet1NATGatewayC61D892B"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRoute",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.PrivateSubnet",
                  "version": "1.181.0"
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "ecs-inf-test/TheVPC/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "TheVPC92636AB0"
                        },
                        "availabilityZone": "us-east-1b",
                        "cidrBlock": "10.0.128.0/19",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PrivateSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnet",
                      "version": "1.181.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet2/Acl",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.181.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "TheVPC92636AB0"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PrivateSubnet2"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRouteTable",
                      "version": "1.181.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "TheVPCPrivateSubnet2RouteTable9AC81FAC"
                        },
                        "subnetId": {
                          "Ref": "TheVPCPrivateSubnet2SubnetCC3D7013"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation",
                      "version": "1.181.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "TheVPCPrivateSubnet2RouteTable9AC81FAC"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "TheVPCPublicSubnet2NATGatewayB437CFAF"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRoute",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.PrivateSubnet",
                  "version": "1.181.0"
                }
              },
              "PrivateSubnet3": {
                "id": "PrivateSubnet3",
                "path": "ecs-inf-test/TheVPC/PrivateSubnet3",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet3/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "TheVPC92636AB0"
                        },
                        "availabilityZone": "us-east-1c",
                        "cidrBlock": "10.0.160.0/19",
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PrivateSubnet3"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnet",
                      "version": "1.181.0"
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet3/Acl",
                    "constructInfo": {
                      "fqn": "@aws-cdk/core.Resource",
                      "version": "1.181.0"
                    }
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet3/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "TheVPC92636AB0"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "ecs-inf-test/TheVPC/PrivateSubnet3"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRouteTable",
                      "version": "1.181.0"
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet3/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "TheVPCPrivateSubnet3RouteTable1A0D1274"
                        },
                        "subnetId": {
                          "Ref": "TheVPCPrivateSubnet3Subnet69CC2C6F"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSubnetRouteTableAssociation",
                      "version": "1.181.0"
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "ecs-inf-test/TheVPC/PrivateSubnet3/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "TheVPCPrivateSubnet3RouteTable1A0D1274"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "TheVPCPublicSubnet3NATGateway3A4A718F"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnRoute",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.PrivateSubnet",
                  "version": "1.181.0"
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "ecs-inf-test/TheVPC/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "ecs-inf-test/TheVPC"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.CfnInternetGateway",
                  "version": "1.181.0"
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "ecs-inf-test/TheVPC/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "TheVPC92636AB0"
                    },
                    "internetGatewayId": {
                      "Ref": "TheVPCIGWFA25CC08"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.CfnVPCGatewayAttachment",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-ec2.Vpc",
              "version": "1.181.0"
            }
          },
          "ServiceTaskDefExecutionRole": {
            "id": "ServiceTaskDefExecutionRole",
            "path": "ecs-inf-test/ServiceTaskDefExecutionRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-inf-test/ServiceTaskDefExecutionRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
                          ]
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.CfnRole",
                  "version": "1.181.0"
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "ecs-inf-test/ServiceTaskDefExecutionRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ecs-inf-test/ServiceTaskDefExecutionRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "ecr:BatchCheckLayerAvailability",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:BatchGetImage"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":ecr:us-east-1:241756044655:repository/fargate-dev-workshop"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": "ecr:GetAuthorizationToken",
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "ServiceTaskDefExecutionRoleDefaultPolicy4626101A",
                        "roles": [
                          {
                            "Ref": "ServiceTaskDefExecutionRole13E8686E"
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-iam.CfnPolicy",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.Policy",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.Role",
              "version": "1.181.0"
            }
          },
          "ServiceTaskDefTaskRole": {
            "id": "ServiceTaskDefTaskRole",
            "path": "ecs-inf-test/ServiceTaskDefTaskRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-inf-test/ServiceTaskDefTaskRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ecs-tasks.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.CfnRole",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.Role",
              "version": "1.181.0"
            }
          },
          "CodeDeployRole": {
            "id": "CodeDeployRole",
            "path": "ecs-inf-test/CodeDeployRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-inf-test/CodeDeployRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "codedeploy.us-east-1.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AWSCodeDeployRoleForECS"
                          ]
                        ]
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-iam.CfnRole",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-iam.Role",
              "version": "1.181.0"
            }
          },
          "ecs-cluster": {
            "id": "ecs-cluster",
            "path": "ecs-inf-test/ecs-cluster",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-inf-test/ecs-cluster/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Cluster",
                  "aws:cdk:cloudformation:props": {
                    "clusterName": "fargate-dev-workshop-test"
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ecs.CfnCluster",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-ecs.Cluster",
              "version": "1.181.0"
            }
          },
          "load_balancer": {
            "id": "load_balancer",
            "path": "ecs-inf-test/load_balancer",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-inf-test/load_balancer/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                  "aws:cdk:cloudformation:props": {
                    "loadBalancerAttributes": [
                      {
                        "key": "deletion_protection.enabled",
                        "value": "false"
                      }
                    ],
                    "scheme": "internet-facing",
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "loadbalancerSecurityGroup2D54D16B",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnets": [
                      {
                        "Ref": "TheVPCPublicSubnet1Subnet770D4FF2"
                      },
                      {
                        "Ref": "TheVPCPublicSubnet2Subnet73F96DA9"
                      },
                      {
                        "Ref": "TheVPCPublicSubnet3Subnet7C1E748F"
                      }
                    ],
                    "type": "application"
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnLoadBalancer",
                  "version": "1.181.0"
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "ecs-inf-test/load_balancer/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ecs-inf-test/load_balancer/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Automatically created Security Group for ELB ecsinftestloadbalancerA39E0733",
                        "securityGroupIngress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "ipProtocol": "tcp",
                            "fromPort": 80,
                            "toPort": 80,
                            "description": "Allow from anyone on port 80"
                          },
                          {
                            "cidrIp": "0.0.0.0/0",
                            "ipProtocol": "tcp",
                            "fromPort": 8080,
                            "toPort": 8080,
                            "description": "Allow from anyone on port 8080"
                          }
                        ],
                        "vpcId": {
                          "Ref": "TheVPC92636AB0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup",
                      "version": "1.181.0"
                    }
                  },
                  "to ecsinftestservicesg94443D5E:80": {
                    "id": "to ecsinftestservicesg94443D5E:80",
                    "path": "ecs-inf-test/load_balancer/SecurityGroup/to ecsinftestservicesg94443D5E:80",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                      "aws:cdk:cloudformation:props": {
                        "groupId": {
                          "Fn::GetAtt": [
                            "loadbalancerSecurityGroup2D54D16B",
                            "GroupId"
                          ]
                        },
                        "ipProtocol": "tcp",
                        "description": "to ecsinftestservicesg94443D5E:80",
                        "destinationSecurityGroupId": {
                          "Fn::GetAtt": [
                            "servicesgE18B74B7",
                            "GroupId"
                          ]
                        },
                        "fromPort": 80,
                        "toPort": 80
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupEgress",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.SecurityGroup",
                  "version": "1.181.0"
                }
              },
              "load_balancer_listener_1": {
                "id": "load_balancer_listener_1",
                "path": "ecs-inf-test/load_balancer/load_balancer_listener_1",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ecs-inf-test/load_balancer/load_balancer_listener_1/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                      "aws:cdk:cloudformation:props": {
                        "defaultActions": [
                          {
                            "type": "forward",
                            "targetGroupArn": {
                              "Ref": "loadbalancerloadbalancerlistener1loadbalancertarget1Group06D2C091"
                            }
                          }
                        ],
                        "loadBalancerArn": {
                          "Ref": "loadbalancer25023A58"
                        },
                        "port": 80,
                        "protocol": "HTTP"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener",
                      "version": "1.181.0"
                    }
                  },
                  "load_balancer_target_1Group": {
                    "id": "load_balancer_target_1Group",
                    "path": "ecs-inf-test/load_balancer/load_balancer_listener_1/load_balancer_target_1Group",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-inf-test/load_balancer/load_balancer_listener_1/load_balancer_target_1Group/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                          "aws:cdk:cloudformation:props": {
                            "healthCheckIntervalSeconds": 5,
                            "healthCheckTimeoutSeconds": 4,
                            "healthyThresholdCount": 2,
                            "matcher": {
                              "httpCode": "200"
                            },
                            "port": 80,
                            "protocol": "HTTP",
                            "targetGroupAttributes": [
                              {
                                "key": "stickiness.enabled",
                                "value": "false"
                              }
                            ],
                            "targetType": "ip",
                            "unhealthyThresholdCount": 3,
                            "vpcId": {
                              "Ref": "TheVPC92636AB0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup",
                          "version": "1.181.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
                  "version": "1.181.0"
                }
              },
              "load_balancer_listener_2": {
                "id": "load_balancer_listener_2",
                "path": "ecs-inf-test/load_balancer/load_balancer_listener_2",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "ecs-inf-test/load_balancer/load_balancer_listener_2/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                      "aws:cdk:cloudformation:props": {
                        "defaultActions": [
                          {
                            "type": "forward",
                            "targetGroupArn": {
                              "Ref": "loadbalancerloadbalancerlistener2loadbalancertarget2Group306D6C94"
                            }
                          }
                        ],
                        "loadBalancerArn": {
                          "Ref": "loadbalancer25023A58"
                        },
                        "port": 8080,
                        "protocol": "HTTP"
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnListener",
                      "version": "1.181.0"
                    }
                  },
                  "load_balancer_target_2Group": {
                    "id": "load_balancer_target_2Group",
                    "path": "ecs-inf-test/load_balancer/load_balancer_listener_2/load_balancer_target_2Group",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "ecs-inf-test/load_balancer/load_balancer_listener_2/load_balancer_target_2Group/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                          "aws:cdk:cloudformation:props": {
                            "healthCheckIntervalSeconds": 5,
                            "healthCheckTimeoutSeconds": 4,
                            "healthyThresholdCount": 2,
                            "matcher": {
                              "httpCode": "200"
                            },
                            "port": 80,
                            "protocol": "HTTP",
                            "targetGroupAttributes": [
                              {
                                "key": "stickiness.enabled",
                                "value": "false"
                              }
                            ],
                            "targetType": "ip",
                            "unhealthyThresholdCount": 3,
                            "vpcId": {
                              "Ref": "TheVPC92636AB0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "@aws-cdk/aws-elasticloadbalancingv2.CfnTargetGroup",
                          "version": "1.181.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup",
                      "version": "1.181.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer",
              "version": "1.181.0"
            }
          },
          "service_sg": {
            "id": "service_sg",
            "path": "ecs-inf-test/service_sg",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-inf-test/service_sg/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                  "aws:cdk:cloudformation:props": {
                    "groupDescription": "ecs-inf-test/service_sg",
                    "securityGroupEgress": [
                      {
                        "cidrIp": "0.0.0.0/0",
                        "description": "Allow all outbound traffic by default",
                        "ipProtocol": "-1"
                      }
                    ],
                    "vpcId": {
                      "Ref": "TheVPC92636AB0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroup",
                  "version": "1.181.0"
                }
              },
              "from ecsinftestloadbalancerSecurityGroupAD47570C:80": {
                "id": "from ecsinftestloadbalancerSecurityGroupAD47570C:80",
                "path": "ecs-inf-test/service_sg/from ecsinftestloadbalancerSecurityGroupAD47570C:80",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                  "aws:cdk:cloudformation:props": {
                    "ipProtocol": "tcp",
                    "description": "from ecsinftestloadbalancerSecurityGroupAD47570C:80",
                    "fromPort": 80,
                    "groupId": {
                      "Fn::GetAtt": [
                        "servicesgE18B74B7",
                        "GroupId"
                      ]
                    },
                    "sourceSecurityGroupId": {
                      "Fn::GetAtt": [
                        "loadbalancerSecurityGroup2D54D16B",
                        "GroupId"
                      ]
                    },
                    "toPort": 80
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ec2.CfnSecurityGroupIngress",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-ec2.SecurityGroup",
              "version": "1.181.0"
            }
          },
          "image_repo": {
            "id": "image_repo",
            "path": "ecs-inf-test/image_repo",
            "constructInfo": {
              "fqn": "@aws-cdk/aws-ecr.RepositoryBase",
              "version": "1.181.0"
            }
          },
          "log_group": {
            "id": "log_group",
            "path": "ecs-inf-test/log_group",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-inf-test/log_group/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Logs::LogGroup",
                  "aws:cdk:cloudformation:props": {
                    "logGroupName": "fargate-dev-workshop-test",
                    "retentionInDays": 731
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-logs.CfnLogGroup",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-logs.LogGroup",
              "version": "1.181.0"
            }
          },
          "fargate_task_definition": {
            "id": "fargate_task_definition",
            "path": "ecs-inf-test/fargate_task_definition",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-inf-test/fargate_task_definition/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::TaskDefinition",
                  "aws:cdk:cloudformation:props": {
                    "containerDefinitions": [
                      {
                        "essential": true,
                        "image": {
                          "Fn::Join": [
                            "",
                            [
                              "241756044655.dkr.ecr.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/fargate-dev-workshop:release"
                            ]
                          ]
                        },
                        "name": "fargate_task_container",
                        "portMappings": [
                          {
                            "containerPort": 80,
                            "hostPort": 80,
                            "protocol": "tcp"
                          }
                        ]
                      }
                    ],
                    "cpu": "256",
                    "executionRoleArn": {
                      "Fn::GetAtt": [
                        "ServiceTaskDefExecutionRole13E8686E",
                        "Arn"
                      ]
                    },
                    "family": "fargate-dev-workshop-test",
                    "memory": "512",
                    "networkMode": "awsvpc",
                    "requiresCompatibilities": [
                      "FARGATE"
                    ],
                    "taskRoleArn": {
                      "Fn::GetAtt": [
                        "ServiceTaskDefTaskRole4A468EED",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ecs.CfnTaskDefinition",
                  "version": "1.181.0"
                }
              },
              "fargate_task_container": {
                "id": "fargate_task_container",
                "path": "ecs-inf-test/fargate_task_definition/fargate_task_container",
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ecs.ContainerDefinition",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-ecs.FargateTaskDefinition",
              "version": "1.181.0"
            }
          },
          "fargate_service": {
            "id": "fargate_service",
            "path": "ecs-inf-test/fargate_service",
            "children": {
              "Service": {
                "id": "Service",
                "path": "ecs-inf-test/fargate_service/Service",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ECS::Service",
                  "aws:cdk:cloudformation:props": {
                    "cluster": {
                      "Ref": "ecscluster7830E7B5"
                    },
                    "deploymentConfiguration": {
                      "maximumPercent": 200,
                      "minimumHealthyPercent": 50
                    },
                    "deploymentController": {
                      "type": "CODE_DEPLOY"
                    },
                    "desiredCount": 5,
                    "enableEcsManagedTags": false,
                    "healthCheckGracePeriodSeconds": 60,
                    "launchType": "FARGATE",
                    "loadBalancers": [
                      {
                        "targetGroupArn": {
                          "Ref": "loadbalancerloadbalancerlistener1loadbalancertarget1Group06D2C091"
                        },
                        "containerName": "fargate_task_container",
                        "containerPort": 80
                      },
                      {
                        "targetGroupArn": {
                          "Ref": "loadbalancerloadbalancerlistener2loadbalancertarget2Group306D6C94"
                        },
                        "containerName": "fargate_task_container",
                        "containerPort": 80
                      }
                    ],
                    "networkConfiguration": {
                      "awsvpcConfiguration": {
                        "assignPublicIp": "DISABLED",
                        "subnets": [
                          {
                            "Ref": "TheVPCPrivateSubnet1Subnet571D3690"
                          },
                          {
                            "Ref": "TheVPCPrivateSubnet2SubnetCC3D7013"
                          },
                          {
                            "Ref": "TheVPCPrivateSubnet3Subnet69CC2C6F"
                          }
                        ],
                        "securityGroups": [
                          {
                            "Fn::GetAtt": [
                              "servicesgE18B74B7",
                              "GroupId"
                            ]
                          }
                        ]
                      }
                    },
                    "serviceName": "fargate-dev-workshop-test",
                    "taskDefinition": {
                      "Ref": "fargatetaskdefinitionC3EBDAF7"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-ecs.CfnService",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-ecs.FargateService",
              "version": "1.181.0"
            }
          },
          "TargetGroup5xx": {
            "id": "TargetGroup5xx",
            "path": "ecs-inf-test/TargetGroup5xx",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-inf-test/TargetGroup5xx/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                  "aws:cdk:cloudformation:props": {
                    "comparisonOperator": "GreaterThanOrEqualToThreshold",
                    "evaluationPeriods": 1,
                    "dimensions": [
                      {
                        "name": "LoadBalancer",
                        "value": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::Select": [
                                  1,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Ref": "loadbalancerloadbalancerlistener1CE676931"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "/",
                              {
                                "Fn::Select": [
                                  2,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Ref": "loadbalancerloadbalancerlistener1CE676931"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "/",
                              {
                                "Fn::Select": [
                                  3,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Ref": "loadbalancerloadbalancerlistener1CE676931"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        }
                      },
                      {
                        "name": "TargetGroup",
                        "value": {
                          "Fn::GetAtt": [
                            "loadbalancerloadbalancerlistener1loadbalancertarget1Group06D2C091",
                            "TargetGroupFullName"
                          ]
                        }
                      }
                    ],
                    "metricName": "HTTPCode_Target_5XX_Count",
                    "namespace": "AWS/ApplicationELB",
                    "period": 60,
                    "statistic": "Sum",
                    "threshold": 1
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
              "version": "1.181.0"
            }
          },
          "TargetGroup25xx": {
            "id": "TargetGroup25xx",
            "path": "ecs-inf-test/TargetGroup25xx",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-inf-test/TargetGroup25xx/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                  "aws:cdk:cloudformation:props": {
                    "comparisonOperator": "GreaterThanOrEqualToThreshold",
                    "evaluationPeriods": 1,
                    "dimensions": [
                      {
                        "name": "LoadBalancer",
                        "value": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::Select": [
                                  1,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Ref": "loadbalancerloadbalancerlistener20A0A50DC"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "/",
                              {
                                "Fn::Select": [
                                  2,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Ref": "loadbalancerloadbalancerlistener20A0A50DC"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "/",
                              {
                                "Fn::Select": [
                                  3,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Ref": "loadbalancerloadbalancerlistener20A0A50DC"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        }
                      },
                      {
                        "name": "TargetGroup",
                        "value": {
                          "Fn::GetAtt": [
                            "loadbalancerloadbalancerlistener2loadbalancertarget2Group306D6C94",
                            "TargetGroupFullName"
                          ]
                        }
                      }
                    ],
                    "metricName": "HTTPCode_Target_5XX_Count",
                    "namespace": "AWS/ApplicationELB",
                    "period": 60,
                    "statistic": "Sum",
                    "threshold": 1
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
              "version": "1.181.0"
            }
          },
          "TargetGroupUnhealthyHosts": {
            "id": "TargetGroupUnhealthyHosts",
            "path": "ecs-inf-test/TargetGroupUnhealthyHosts",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-inf-test/TargetGroupUnhealthyHosts/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                  "aws:cdk:cloudformation:props": {
                    "comparisonOperator": "GreaterThanOrEqualToThreshold",
                    "evaluationPeriods": 1,
                    "dimensions": [
                      {
                        "name": "LoadBalancer",
                        "value": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::Select": [
                                  1,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Ref": "loadbalancerloadbalancerlistener1CE676931"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "/",
                              {
                                "Fn::Select": [
                                  2,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Ref": "loadbalancerloadbalancerlistener1CE676931"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "/",
                              {
                                "Fn::Select": [
                                  3,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Ref": "loadbalancerloadbalancerlistener1CE676931"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        }
                      },
                      {
                        "name": "TargetGroup",
                        "value": {
                          "Fn::GetAtt": [
                            "loadbalancerloadbalancerlistener1loadbalancertarget1Group06D2C091",
                            "TargetGroupFullName"
                          ]
                        }
                      }
                    ],
                    "metricName": "UnHealthyHostCount",
                    "namespace": "AWS/ApplicationELB",
                    "period": 60,
                    "statistic": "Average",
                    "threshold": 1
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
              "version": "1.181.0"
            }
          },
          "TargetGroup2UnhealthyHosts": {
            "id": "TargetGroup2UnhealthyHosts",
            "path": "ecs-inf-test/TargetGroup2UnhealthyHosts",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "ecs-inf-test/TargetGroup2UnhealthyHosts/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CloudWatch::Alarm",
                  "aws:cdk:cloudformation:props": {
                    "comparisonOperator": "GreaterThanOrEqualToThreshold",
                    "evaluationPeriods": 1,
                    "dimensions": [
                      {
                        "name": "LoadBalancer",
                        "value": {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::Select": [
                                  1,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Ref": "loadbalancerloadbalancerlistener20A0A50DC"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "/",
                              {
                                "Fn::Select": [
                                  2,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Ref": "loadbalancerloadbalancerlistener20A0A50DC"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "/",
                              {
                                "Fn::Select": [
                                  3,
                                  {
                                    "Fn::Split": [
                                      "/",
                                      {
                                        "Ref": "loadbalancerloadbalancerlistener20A0A50DC"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        }
                      },
                      {
                        "name": "TargetGroup",
                        "value": {
                          "Fn::GetAtt": [
                            "loadbalancerloadbalancerlistener2loadbalancertarget2Group306D6C94",
                            "TargetGroupFullName"
                          ]
                        }
                      }
                    ],
                    "metricName": "UnHealthyHostCount",
                    "namespace": "AWS/ApplicationELB",
                    "period": 60,
                    "statistic": "Average",
                    "threshold": 1
                  }
                },
                "constructInfo": {
                  "fqn": "@aws-cdk/aws-cloudwatch.CfnAlarm",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/aws-cloudwatch.Alarm",
              "version": "1.181.0"
            }
          },
          "lburl": {
            "id": "lburl",
            "path": "ecs-inf-test/lburl",
            "constructInfo": {
              "fqn": "@aws-cdk/core.CfnOutput",
              "version": "1.181.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "ecs-inf-test/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "ecs-inf-test/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "@aws-cdk/core.CfnResource",
                  "version": "1.181.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "@aws-cdk/core.Construct",
              "version": "1.181.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "@aws-cdk/core.Stack",
          "version": "1.181.0"
        }
      }
    },
    "constructInfo": {
      "fqn": "@aws-cdk/core.App",
      "version": "1.181.0"
    }
  }
}